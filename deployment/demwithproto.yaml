#apiVersion: v1
#kind: Namespace
#metadata:
#  name: demo-proto-ns
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-proto
  namespace: demo-proto-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demo-proto
  template:
    metadata:
      labels:
        app: demo-proto
    spec:
      containers:
      - name: demo-java-container
        image: andyglen/demowithproto:v1
        ports:
          - containerPort: 8082
        volumeMounts:
          - name: app-volume
            mountPath: /app/data
        resources:
          limits:
            cpu: 300m
          requests:
            cpu: 200m
        startupProbe:
          httpGet:
            path: /testAPI/healthcheck
            port: 8082
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /testAPI/healthcheck
            port: 8082
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 1
        readinessProbe:
          httpGet:
            path: /testAPI/healthcheck_dependency
            port: 8082
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 1
          successThreshold: 5
          failureThreshold: 7
      volumes:
        - name: app-volume
          persistentVolumeClaim:
            claimName: demo-proto-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: demo-proto-service-clusterip
  namespace: demo-proto-ns
spec:
  selector:
    app: demo-proto
  type: NodePort
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8082
      nodePort: 30390
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: demo-proto-pv
spec:
  storageClassName: demo-proto-001
  volumeMode: Filesystem
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /logs/demoProto
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demo-proto-pvc
  namespace: demo-proto-ns
spec:
  storageClassName: demo-proto-001
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: ingress-defaultbackend
#  namespace: demo-proto-ns
#spec:
#  ingressClassName: nginx
#  defaultBackend:
#    service:
#      name: demo-proto-service-clusterip
#      port:
#        number: 8081